group_by(gene) %>%
mutate(
# pick y value corresponding to y3
color_y = sum(cor * (perc_sim == "(80-100%]"))
) %>%
ggplot(aes(x = perc_sim, y = cor, group = gene, color = color_y, fill = color_y)) +
geom_path(size = 0.25, position = position_jitter(width = 0.05, height = 0, seed = 123)) +
geom_point(
shape = 21, color = "black",
size = 2, position = position_jitter(width = 0.05, height = 0, seed = 123)
) +
scale_x_discrete(
name = "Percent Sequence Similarity of Alignment") +
scale_y_continuous(
name = "Correlation Coefficients",
limits = c(-0.4, 0.6),
breaks = seq(from = -0.4, to = 0.6, by = 0.1),
expand = c(0, 0)) +
scale_color_viridis_c(aesthetics = c("color", "fill"), option = "E") +
theme_bw() +
theme(legend.position="none")
cor_reduced %>%
group_by(gene) %>%
mutate(
# pick y value corresponding to y3
color_y = sum(cor * (perc_sim == "(80-100%]"))
) %>%
ggplot(aes(x = perc_sim, y = cor, group = gene, color = color_y, fill = color_y)) +
geom_path(size = 0.25, position = position_jitter(width = 0.05, height = 0, seed = 123)) +
geom_point(
shape = 21, color = "black",
size = 2, position = position_jitter(width = 0.05, height = 0, seed = 123)
) +
scale_x_discrete(
name = "Percent Sequence Similarity of Alignment") +
scale_y_continuous(
name = "Correlation Coefficients",
limits = c(-0.4, 0.6),
breaks = seq(from = -0.4, to = 0.6, by = 0.1),
expand = c(0, 0)) +
scale_color_viridis_c(aesthetics = c("color", "fill"), option = "E") +
theme_bw() +
theme(legend.position="none")
cor_reduced %>%
group_by(gene) %>%
mutate(
# pick y value corresponding to y3
color_y = sum(cor * (perc_sim == "(80-100%]"))
) %>%
ggplot(aes(x = perc_sim, y = cor, group = gene, color = color_y, fill = color_y)) +
geom_path(size = 0.25, position = position_jitter(width = 0.05, height = 0, seed = 123)) +
geom_point(
shape = 21, color = "black",
size = 2, position = position_jitter(width = 0.05, height = 0, seed = 123)
) +
scale_x_discrete(
name = "Percent Sequence Similarity of Alignment") +
scale_y_continuous(
name = "Correlation Coefficients",
limits = c(-0.4, 0.6),
breaks = seq(from = -0.4, to = 0.6, by = 0.1),
expand = c(0, 0)) +
scale_color_viridis_c(aesthetics = c("color", "fill"), option = "A") +
theme_bw() +
theme(legend.position="none")
cor_reduced %>%
group_by(gene) %>%
mutate(
# pick y value corresponding to y3
color_y = sum(cor * (perc_sim == "(80-100%]"))
) %>%
ggplot(aes(x = perc_sim, y = cor, group = gene, color = color_y, fill = color_y)) +
geom_path(size = 0.25, position = position_jitter(width = 0.05, height = 0, seed = 123)) +
geom_point(
shape = 21, color = "black",
size = 2, position = position_jitter(width = 0.05, height = 0, seed = 123)
) +
scale_x_discrete(
name = "Percent Sequence Similarity of Alignment") +
scale_y_continuous(
name = "Correlation Coefficients",
limits = c(-0.4, 0.6),
breaks = seq(from = -0.4, to = 0.6, by = 0.1),
expand = c(0, 0)) +
scale_color_viridis_c(aesthetics = c("color", "fill"), option = "B") +
theme_bw() +
theme(legend.position="none")
cor_reduced %>%
group_by(gene) %>%
mutate(
# pick y value corresponding to y3
color_y = sum(cor * (perc_sim == "(80-100%]"))
) %>%
ggplot(aes(x = perc_sim, y = cor, group = gene, color = color_y, fill = color_y)) +
geom_path(size = 0.25, position = position_jitter(width = 0.05, height = 0, seed = 123)) +
geom_point(
shape = 21, color = "black",
size = 2, position = position_jitter(width = 0.05, height = 0, seed = 123)
) +
scale_x_discrete(
name = "Percent Sequence Similarity of Alignment") +
scale_y_continuous(
name = "Correlation Coefficients",
limits = c(-0.4, 0.6),
breaks = seq(from = -0.4, to = 0.6, by = 0.1),
expand = c(0, 0)) +
scale_color_viridis_c(aesthetics = c("color", "fill"), option = "C") +
theme_bw() +
theme(legend.position="none")
cor_reduced %>%
group_by(gene) %>%
mutate(
# pick y value corresponding to y3
color_y = sum(cor * (perc_sim == "(80-100%]"))
) %>%
ggplot(aes(x = perc_sim, y = cor, group = gene, color = color_y, fill = color_y)) +
geom_path(size = 0.25, position = position_jitter(width = 0.05, height = 0, seed = 123)) +
geom_point(
shape = 21, color = "black",
size = 2, position = position_jitter(width = 0.05, height = 0, seed = 123)
) +
scale_x_discrete(
name = "Percent Sequence Similarity of Alignment") +
scale_y_continuous(
name = "Correlation Coefficients",
limits = c(-0.4, 0.6),
breaks = seq(from = -0.4, to = 0.6, by = 0.1),
expand = c(0, 0)) +
scale_color_viridis_c(aesthetics = c("color", "fill"), option = "E") +
theme_bw() +
theme(legend.position="none")
cor_reduced %>%
group_by(gene) %>%
mutate(
# pick y value corresponding to y3
color_y = sum(cor * (perc_sim == "(80-100%]"))
) %>%
ggplot(aes(x = perc_sim, y = cor, group = gene, color = color_y, fill = color_y)) +
geom_path(size = 0.25, position = position_jitter(width = 0.05, height = 0, seed = 123)) +
geom_point(
shape = 21, color = "black",
size = 2, position = position_jitter(width = 0.05, height = 0, seed = 123)
) +
scale_x_discrete(
name = "Percent Sequence Similarity of Alignment") +
scale_y_continuous(
name = "Correlation Coefficients",
limits = c(-0.4, 0.6),
breaks = seq(from = -0.4, to = 0.6, by = 0.1),
expand = c(0, 0)) +
scale_color_viridis_c(aesthetics = c("color", "fill"), option = "C") +
theme_bw() +
theme(legend.position="none")
cor_reduced %>%
group_by(gene) %>%
mutate(
# pick y value corresponding to y3
color_y = sum(cor * (perc_sim == "(80-100%]"))
) %>%
ggplot(aes(x = perc_sim, y = cor, group = gene, color = color_y, fill = color_y)) +
geom_path(size = 0.25, position = position_jitter(width = 0.05, height = 0, seed = 123)) +
geom_point(
shape = 21, color = "black",
size = 2, position = position_jitter(width = 0.05, height = 0, seed = 123)
) +
scale_x_discrete(
name = "Percent Sequence Similarity of Alignment") +
scale_y_continuous(
name = "Correlation Coefficients",
limits = c(-0.4, 0.6),
breaks = seq(from = -0.4, to = 0.6, by = 0.1),
expand = c(0, 0)) +
scale_color_viridis_c(aesthetics = c("color", "fill"), option = "D") +
theme_bw() +
theme(legend.position="none")
cor_reduced %>%
group_by(gene) %>%
mutate(
# pick y value corresponding to y3
color_y = sum(cor * (perc_sim == "(80-100%]"))
) %>%
ggplot(aes(x = perc_sim, y = cor, group = gene, color = color_y, fill = color_y)) +
geom_path(size = 0.25, position = position_jitter(width = 0.05, height = 0, seed = 123)) +
geom_point(
shape = 21, color = "black",
size = 2, position = position_jitter(width = 0.05, height = 0, seed = 123)
) +
scale_x_discrete(
name = "Percent Sequence Similarity of Alignment") +
scale_y_continuous(
name = "Correlation Coefficients",
limits = c(-0.4, 0.6),
breaks = seq(from = -0.4, to = 0.6, by = 0.1),
expand = c(0, 0)) +
scale_color_viridis_c(aesthetics = c("color", "fill"), option = "E") +
theme_bw() +
theme(legend.position="none")
cor_reduced %>%
group_by(gene) %>%
mutate(
# pick y value corresponding to y3
color_y = sum(cor * (perc_sim == "(80-100%]"))
) %>%
ggplot(aes(x = perc_sim, y = cor, group = gene, color = color_y, fill = color_y)) +
geom_path(size = 0.25, position = position_jitter(width = 0.05, height = 0, seed = 123)) +
geom_point(
shape = 21, color = "black",
size = 2, position = position_jitter(width = 0.05, height = 0, seed = 123)
) +
scale_x_discrete(
name = "Percent Sequence Similarity of Alignment") +
scale_y_continuous(
name = "Correlation Coefficients",
limits = c(-0.4, 0.6),
breaks = seq(from = -0.4, to = 0.6, by = 0.1),
expand = c(0, 0)) +
scale_color_viridis_c(aesthetics = c("color", "fill"), option = "E", end = 0.7) +
theme_bw() +
theme(legend.position="none")
cor_reduced %>%
group_by(gene) %>%
mutate(
# pick y value corresponding to y3
color_y = sum(cor * (perc_sim == "(80-100%]"))
) %>%
ggplot(aes(x = perc_sim, y = cor, group = gene, color = color_y, fill = color_y)) +
geom_path(size = 0.25, position = position_jitter(width = 0.05, height = 0, seed = 123)) +
geom_point(
shape = 21, color = "black",
size = 2, position = position_jitter(width = 0.05, height = 0, seed = 123)
) +
scale_x_discrete(
name = "Percent Sequence Similarity of Alignment") +
scale_y_continuous(
name = "Correlation Coefficients",
limits = c(-0.4, 0.6),
breaks = seq(from = -0.4, to = 0.6, by = 0.1),
expand = c(0, 0)) +
scale_color_viridis_c(aesthetics = c("color", "fill"), option = "E", end = 1) +
theme_bw() +
theme(legend.position="none")
cor_reduced %>%
group_by(gene) %>%
mutate(
# pick y value corresponding to y3
color_y = sum(cor * (perc_sim == "(80-100%]"))
) %>%
ggplot(aes(x = perc_sim, y = cor, group = gene, color = color_y, fill = color_y)) +
geom_path(size = 0.25, position = position_jitter(width = 0.05, height = 0, seed = 123)) +
geom_point(
shape = 21, color = "black",
size = 2, position = position_jitter(width = 0.05, height = 0, seed = 123)
) +
scale_x_discrete(
name = "Percent Sequence Similarity of Alignment") +
scale_y_continuous(
name = "Correlation Coefficients",
limits = c(-0.4, 0.6),
breaks = seq(from = -0.4, to = 0.6, by = 0.1),
expand = c(0, 0)) +
scale_color_viridis_c(aesthetics = c("color", "fill"), option = "E", begin = 0.5, end = 1) +
theme_bw() +
theme(legend.position="none")
cor_reduced %>%
group_by(gene) %>%
mutate(
# pick y value corresponding to y3
color_y = sum(cor * (perc_sim == "(80-100%]"))
) %>%
ggplot(aes(x = perc_sim, y = cor, group = gene, color = color_y, fill = color_y)) +
geom_path(size = 0.25, position = position_jitter(width = 0.05, height = 0, seed = 123)) +
geom_point(
shape = 21, color = "black",
size = 2, position = position_jitter(width = 0.05, height = 0, seed = 123)
) +
scale_x_discrete(
name = "Percent Sequence Similarity of Alignment") +
scale_y_continuous(
name = "Correlation Coefficients",
limits = c(-0.4, 0.6),
breaks = seq(from = -0.4, to = 0.6, by = 0.1),
expand = c(0, 0)) +
scale_color_viridis_c(aesthetics = c("color", "fill"), option = "E", begin = 0.3, end = 1) +
theme_bw() +
theme(legend.position="none")
a <- cor_reduced %>%
group_by(gene) %>%
mutate(
# pick y value corresponding to y3
color_y = sum(cor * (perc_sim == "(80-100%]"))
) %>%
ggplot(aes(x = perc_sim, y = cor, group = gene, color = color_y, fill = color_y)) +
geom_path(size = 0.25, position = position_jitter(width = 0.05, height = 0, seed = 123)) +
geom_point(
shape = 21, color = "black",
size = 2, position = position_jitter(width = 0.05, height = 0, seed = 123)
) +
scale_x_discrete(
name = "Percent Sequence Similarity of Alignment") +
scale_y_continuous(
name = "Correlation Coefficients",
limits = c(-0.4, 0.6),
breaks = seq(from = -0.4, to = 0.6, by = 0.1),
expand = c(0, 0)) +
scale_color_viridis_c(aesthetics = c("color", "fill"), option = "E", begin = 0.3, end = 1) +
theme_bw() +
theme(legend.position="none")
ggsave(filename = "../../analysis/figures/figure_6a.png", plot = a, width = 8, height = 4)
cnn_data <- read.csv(file = "./cnn_wt_max_freq.csv", header=TRUE, sep=",")
wt_classes <- cnn_data %>%
filter(group == "wt") %>%
select(gene, position, aa_class)
wt_labels <- inner_join(wt_classes, all_joined)
wt_labels_wide <- wt_labels %>%
select(-n_eff_class) %>%
pivot_wider(names_from = group, values_from = n_eff)
cor_3 <- wt_labels_wide %>%
na.omit() %>%
group_by(gene, perc_sim, aa_class) %>%
summarise(cor = cor(natural, predicted))
cor3_wider <- cor_3 %>%
pivot_wider(names_from = perc_sim, values_from = cor)
cor3_reduced <- na.omit(cor3_wider)
cor3_reduced <- cor3_reduced %>%
pivot_longer(cols =  c("(0-20%]", "(20-40%]", "(40-60%]", "(60-80%]", "(80-100%]"), names_to = "perc_sim", values_to = "cor")
plot_c <- cor3_reduced %>%
group_by(gene, aa_class) %>%
mutate(
# pick y value corresponding to y3
color_y = sum(cor * (perc_sim == "(80-100%]"))
) %>%
ggplot(aes(x = perc_sim, y = cor, group = gene, color = color_y, fill = color_y)) +
geom_path(size = 0.25, position = position_jitter(width = 0.05, height = 0, seed = 123)) +
geom_point(
shape = 21, color = "black",
size = 2, position = position_jitter(width = 0.05, height = 0, seed = 123)) +
facet_wrap(aa_class) +
scale_x_discrete(
name = "Percent Sequence Similarity of Alignment") +
scale_y_continuous(
name = "Correlation Coefficients",
limits = c(-0.4, 0.6),
breaks = seq(from = -0.4, to = 0.6, by = 0.1),
expand = c(0, 0)) +
scale_color_viridis_c(aesthetics = c("color", "fill"), option = "E") +
theme_bw() +
theme(legend.position="none")
plot_c <- cor3_reduced %>%
group_by(gene, aa_class) %>%
mutate(
# pick y value corresponding to y3
color_y = sum(cor * (perc_sim == "(80-100%]"))
) %>%
ggplot(aes(x = perc_sim, y = cor, group = gene, color = color_y, fill = color_y)) +
geom_path(size = 0.25, position = position_jitter(width = 0.05, height = 0, seed = 123)) +
geom_point(
shape = 21, color = "black",
size = 2, position = position_jitter(width = 0.05, height = 0, seed = 123)) +
facet_wrap(vars(aa_class)) +
scale_x_discrete(
name = "Percent Sequence Similarity of Alignment") +
scale_y_continuous(
name = "Correlation Coefficients",
limits = c(-0.4, 0.6),
breaks = seq(from = -0.4, to = 0.6, by = 0.1),
expand = c(0, 0)) +
scale_color_viridis_c(aesthetics = c("color", "fill"), option = "E") +
theme_bw() +
theme(legend.position="none")
cor3_reduced %>%
group_by(gene, aa_class) %>%
mutate(
# pick y value corresponding to y3
color_y = sum(cor * (perc_sim == "(80-100%]"))
) %>%
ggplot(aes(x = perc_sim, y = cor, group = gene, color = color_y, fill = color_y)) +
geom_path(size = 0.25, position = position_jitter(width = 0.05, height = 0, seed = 123)) +
geom_point(
shape = 21, color = "black",
size = 2, position = position_jitter(width = 0.05, height = 0, seed = 123)) +
facet_wrap(vars(aa_class)) +
scale_x_discrete(
name = "Percent Sequence Similarity of Alignment") +
scale_y_continuous(
name = "Correlation Coefficients",
limits = c(-0.4, 0.6),
breaks = seq(from = -0.4, to = 0.6, by = 0.1),
expand = c(0, 0)) +
scale_color_viridis_c(aesthetics = c("color", "fill"), option = "E") +
theme_bw() +
theme(legend.position="none")
wt_labels <- inner_join(wt_classes, all_joined)
View(wt_labels)
for_heat_sums2 %>%
ggplot(aes(x = wt, y = predicted, fill = freq)) +
geom_tile() +
scale_fill_gradient(low = "#e5ddee", high = "#3e2b55") +
xlab("WT Residue") +
ylab("Predicted Residue") +
theme(panel.background = element_blank()) +
theme_cowplot()
# loading data
cnn_data <- read.csv(file = "./cnn_wt_max_freq.csv", header=TRUE, sep=",")
natural_data <- read.csv(file = "./natural_max_freq.csv", header=TRUE, sep=",")
joined_data <- rbind(x = cnn_data, y = natural_data)
for_heat <- joined_data %>%
select(group, aa, position, gene) %>%
pivot_wider(names_from = group, values_from = aa)
for_heat_sums <- for_heat %>%
group_by(predicted, wt) %>%
summarise(
count = n(),
)
for_heat_sums2 <- for_heat_sums %>%
group_by(wt) %>%
mutate(freq = count/n())
for_heat_sums2 <- na.omit(for_heat_sums2)
custom_colors <- c("#9875bd", "#ecb613")
a <- for_heat_sums2 %>%
ggplot(aes(x = wt, y = predicted, fill = freq)) +
geom_tile() +
scale_fill_gradient(low = "#e5ddee", high = "#3e2b55") +
xlab("WT Residue") +
ylab("Predicted Residue") +
theme(panel.background = element_blank()) +
theme_cowplot()
for_heat_sums2 %>%
ggplot(aes(x = wt, y = predicted, fill = freq)) +
geom_tile() +
scale_fill_gradient(low = "#e5ddee", high = "#3e2b55") +
xlab("WT Residue") +
ylab("Predicted Residue") +
theme(panel.background = element_blank()) +
theme_cowplot()
for_heat <- joined_data %>%
select(group, aa, position, gene) %>%
pivot_wider(names_from = group, values_from = aa)
View(for_heat)
for_heat_sums <- for_heat %>%
group_by(predicted, wt) %>%
summarise(
count = n(),
)
View(for_heat_sums)
for_heat_sums <- for_heat %>%
group_by(wt, predicted) %>%
summarise(count = n())
for_heat_sums2 <- for_heat_sums %>%
for_heat_sums <- for_heat %>%
group_by(wt, predicted) %>%
summarise(count = n())
for_heat_sums2 <- for_heat_sums %>%
group_by(wt) %>%
mutate(freq = count/sum(count))
for_heat_sums2 <- na.omit(for_heat_sums2)
custom_colors <- c("#9875bd", "#ecb613")
a <- for_heat_sums2 %>%
ggplot(aes(x = wt, y = predicted, fill = freq)) +
geom_tile() +
scale_fill_gradient(low = "#e5ddee", high = "#3e2b55") +
xlab("WT Residue") +
ylab("Predicted Residue") +
theme(panel.background = element_blank()) +
theme_cowplot()
for_heat_sums2 %>%
ggplot(aes(x = wt, y = predicted, fill = freq)) +
geom_tile() +
scale_fill_gradient(low = "#e5ddee", high = "#3e2b55") +
xlab("WT Residue") +
ylab("Predicted Residue") +
theme(panel.background = element_blank()) +
theme_cowplot()
a <- for_heat_sums2 %>%
mutate(freq = ifelse(wt == predicted, NA, freq)) %>%
ggplot(aes(x = wt, y = predicted, fill = freq)) +
geom_tile() +
scale_fill_gradient(low = "#e5ddee", high = "#3e2b55") +
xlab("WT Residue") +
ylab("Predicted Residue") +
theme(panel.background = element_blank()) +
theme_cowplot()
a
a <- for_heat_sums2 %>%
mutate(freq = ifelse(wt == predicted, NA, freq)) %>%
ggplot(aes(x = wt, y = predicted, alpha = freq)) +
geom_tile(fill = "#3e2b55") +
#scale_fill_gradient(low = "#e5ddee", high = "#3e2b55") +
scale_alpha_continuous() +
xlab("WT Residue") +
ylab("Predicted Residue") +
theme(panel.background = element_blank()) +
theme_cowplot()
a
for_heat_2 <- joined_data %>%
select(group, aa_class, position, gene) %>%
pivot_wider(names_from = group, values_from = aa_class)
for_heat_sums <- for_heat_2 %>%
group_by(wt, predicted) %>%
summarise(count = n())
for_heat_sums2 <- for_heat_sums %>%
group_by(wt) %>%
mutate(freq = count/sum(count))
for_heat_sums2 <- na.omit(for_heat_sums2)
a2 <- for_heat_sums2 %>%
ggplot(aes(x = wt, y = predicted, fill = freq)) +
geom_tile() +
scale_fill_gradient(low = "#fdf8e8", high = "#463606") +
xlab("WT Residue Class") +
ylab("Predicted Residue Class") +
theme(panel.background = element_blank()) +
theme_cowplot()
a2
